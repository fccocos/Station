C51 COMPILER V9.60.0.0   MAIN                                                              05/25/2022 05:35:24 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\build\Debug\src\main.o
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.exe .\SRC\MAIN.C PRINT(.\build\Debug\src\main.lst) OMF2 TABS(4) CODE NOCOND 
                    -SYMBOLS OPTIMIZE(8,SPEED) SMALL ROM(LARGE) INCDIR(D:\Keil_v5\C51\INC;.\src) DEFINE(__UVISION_VERSION=526) OBJECT(.\build
                    -\Debug\src\main.o)

line level    source

   1          /**
   2           * @file main.c
   3           * @author Gunfire (gunfirefc70@163.com)
   4           * @brief Realizing the control of independent keys
   5           * @version 0.1
   6           * @date 2022-05-24
   7           * @OnChipMemories: STC89C516RD+
   8           * @types: C51 chip macrocomputer
   9           * @copyright Copyright (c) 2022
  10           *
  11           */
  12          
  13          #include <reg52.h>
  14          
  15          //按键状态
  16          #define KEY1_PRESS 1
  17          #define KEY2_PRESS 2
  18          #define KEY3_PRESS 3
  19          #define KEY4_PRESS 4
  20          #define KEY_UNPRESS 0  
  21          
  22          //声明按键
  23          sbit key1 = P3 ^ 1;
  24          sbit key2 = P3 ^ 0;
  25          sbit key3 = P3 ^ 2;
  26          sbit key4 = P3 ^ 3;
  27          
  28          //声明LED
  29          sbit LED1 = P2 ^ 0;
  30          sbit LED2 = P2 ^ 1;
  31          sbit LED3 = P2 ^ 2;
  32          sbit LED4 = P2 ^ 3;
  33          
  34          /**
  35           *  1. 设置P3.1,P3.0,P3.2,P3.4为高电平（51单片机除P0口，其他端口默认为高电平）
  36              2. 通过软件方法来为按键消抖
  37              3. 为K1, K2,K3,K4编写控制程序
  38              4. 控制对象LED，控制对象的状态：亮和灭
  39              5. 实际控制P0端口P0.0~P0.7端口的高低电平
  40           */
  41          /*软件消抖流程*/
  42          /**
  43           * 1. 先设置IO为高电平
  44           * 2. 判断按键是否按下
  45           * 3. 延迟10ms
  46           * 4. 判断IO是否为低电平
  47           * 5. 如果为低电平，写入控制程序
  48           */
  49          
  50          void sleep(unsigned int seconds)
  51          {
  52   1          while (seconds--)
  53   1              ;
C51 COMPILER V9.60.0.0   MAIN                                                              05/25/2022 05:35:24 PAGE 2   

  54   1      }
  55          
  56          unsigned char key_scan(unsigned char mode)
  57          {
  58   1          static unsigned char key = 1;
  59   1          if(mode) key=1;
  60   1          if(key==1&&(key1==0||key2==0||key3==0||key4==0))
  61   1          {
  62   2              sleep(1000);
  63   2              key=0;
  64   2              if(key1==0) return KEY1_PRESS;
  65   2              if(key2==0) return KEY2_PRESS;
  66   2              if(key3==0) return KEY3_PRESS;
  67   2              if(key4==0) return KEY4_PRESS;
  68   2          }
  69   1          else if(key1==1&&key2==1&&key3==1&&key4==1)
  70   1          {
  71   2              key=1;
  72   2          }
  73   1          return KEY_UNPRESS;
  74   1      }
  75          
  76          void main()
  77          {
  78   1          int pressed = 1;
  79   1          while (1)
  80   1          {
  81   2              unsigned char key = key_scan(0);
  82   2              if(key == KEY1_PRESS)
  83   2                  LED1 = !LED1;
  84   2              if(key == KEY2_PRESS)
  85   2                  LED2 = !LED2;
  86   2              if(key == KEY3_PRESS)
  87   2                  LED3 = !LED3;
  88   2              if(key == KEY4_PRESS)
  89   2                  LED4 = !LED4;
  90   2          }
  91   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              05/25/2022 05:35:24 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _sleep (BEGIN)
                                           ; SOURCE LINE # 50
;---- Variable 'seconds' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 51
0000         ?C0001:
                                           ; SOURCE LINE # 52
0000 EF                MOV     A,R7
0001 1F                DEC     R7
0002 AC06              MOV     R4,AR6
0004 7001              JNZ     ?C0021
0006 1E                DEC     R6
0007         ?C0021:
0007 4C                ORL     A,R4
0008 70F6              JNZ     ?C0001
                                           ; SOURCE LINE # 54
000A 22                RET     
             ; FUNCTION _sleep (END)

             ; FUNCTION _key_scan (BEGIN)
                                           ; SOURCE LINE # 56
;---- Variable 'mode' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 59
0000 EF                MOV     A,R7
0001 6003              JZ      ?C0004
0003 750001      R     MOV     key,#01H
0006         ?C0004:
                                           ; SOURCE LINE # 60
0006 E500        R     MOV     A,key
0008 6401              XRL     A,#01H
000A 702E              JNZ     ?C0005
000C 30B109            JNB     key1,?C0006
000F 30B006            JNB     key2,?C0006
0012 30B203            JNB     key3,?C0006
0015 20B322            JB      key4,?C0005
0018         ?C0006:
                                           ; SOURCE LINE # 61
                                           ; SOURCE LINE # 62
0018 7FE8              MOV     R7,#0E8H
001A 7E03              MOV     R6,#03H
001C 120000      R     LCALL   _sleep
                                           ; SOURCE LINE # 63
001F E4                CLR     A
0020 F500        R     MOV     key,A
                                           ; SOURCE LINE # 64
0022 20B103            JB      key1,?C0007
0025 7F01              MOV     R7,#01H
0027 22                RET     
0028         ?C0007:
                                           ; SOURCE LINE # 65
0028 20B003            JB      key2,?C0009
002B 7F02              MOV     R7,#02H
002D 22                RET     
002E         ?C0009:
                                           ; SOURCE LINE # 66
002E 20B203            JB      key3,?C0010
0031 7F03              MOV     R7,#03H
0033 22                RET     
0034         ?C0010:
C51 COMPILER V9.60.0.0   MAIN                                                              05/25/2022 05:35:24 PAGE 4   

                                           ; SOURCE LINE # 67
0034 20B312            JB      key4,?C0012
0037 7F04              MOV     R7,#04H
0039 22                RET     
                                           ; SOURCE LINE # 68
003A         ?C0005:
                                           ; SOURCE LINE # 69
003A 30B10C            JNB     key1,?C0012
003D 30B009            JNB     key2,?C0012
0040 30B206            JNB     key3,?C0012
0043 30B303            JNB     key4,?C0012
                                           ; SOURCE LINE # 70
                                           ; SOURCE LINE # 71
0046 750001      R     MOV     key,#01H
                                           ; SOURCE LINE # 72
0049         ?C0012:
                                           ; SOURCE LINE # 73
0049 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 74
004B         ?C0008:
004B 22                RET     
             ; FUNCTION _key_scan (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 76
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 78
0000 750000      R     MOV     pressed,#00H
0003 750001      R     MOV     pressed+01H,#01H
0006         ?C0014:
                                           ; SOURCE LINE # 79
                                           ; SOURCE LINE # 80
                                           ; SOURCE LINE # 81
0006 E4                CLR     A
0007 FF                MOV     R7,A
0008 120000      R     LCALL   _key_scan
000B 8F00        R     MOV     key,R7
                                           ; SOURCE LINE # 82
000D 7E00              MOV     R6,#00H
000F EF                MOV     A,R7
0010 6401              XRL     A,#01H
0012 7002              JNZ     ?C0016
                                           ; SOURCE LINE # 83
0014 B2A0              CPL     LED1
0016         ?C0016:
                                           ; SOURCE LINE # 84
0016 EF                MOV     A,R7
0017 6402              XRL     A,#02H
0019 4E                ORL     A,R6
001A 7002              JNZ     ?C0017
                                           ; SOURCE LINE # 85
001C B2A1              CPL     LED2
001E         ?C0017:
                                           ; SOURCE LINE # 86
001E EF                MOV     A,R7
001F 6403              XRL     A,#03H
0021 4E                ORL     A,R6
0022 7002              JNZ     ?C0018
                                           ; SOURCE LINE # 87
0024 B2A2              CPL     LED3
0026         ?C0018:
                                           ; SOURCE LINE # 88
C51 COMPILER V9.60.0.0   MAIN                                                              05/25/2022 05:35:24 PAGE 5   

0026 EF                MOV     A,R7
0027 6404              XRL     A,#04H
0029 4E                ORL     A,R6
002A 70DA              JNZ     ?C0014
                                           ; SOURCE LINE # 89
002C B2A3              CPL     LED4
                                           ; SOURCE LINE # 90
002E 80D6              SJMP    ?C0014
             ; FUNCTION main (END)

C51 COMPILER V9.60.0.0   MAIN                                                              05/25/2022 05:35:24 PAGE 6   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


key4 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
T2 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
LED1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A0H  1
LED2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A1H  1
LED3 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A2H  1
LED4 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A3H  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
EXF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
_sleep . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  seconds. . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
RCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
T2EX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
RCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  key. . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0002H  1
  pressed. . . . . . . . . . . . . . .  AUTO     DATA   INT      0000H  2
C_T2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
RCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
TCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
CP_RL2 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
C51 COMPILER V9.60.0.0   MAIN                                                              05/25/2022 05:35:24 PAGE 7   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
TH2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
_key_scan. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  mode . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  key. . . . . . . . . . . . . . . . .  STATIC   DATA   U_CHAR   0000H  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
TL2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
PT2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
EXEN2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
key1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
key2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
key3 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    135    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
