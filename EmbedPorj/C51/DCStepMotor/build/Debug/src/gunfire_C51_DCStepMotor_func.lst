C51 COMPILER V9.60.0.0   GUNFIRE_C51_DCSTEPMOTOR_FUNC                                      05/26/2022 15:09:49 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE GUNFIRE_C51_DCSTEPMOTOR_FUNC
OBJECT MODULE PLACED IN .\build\Debug\src\gunfire_C51_DCStepMotor_func.o
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.exe .\SRC\GUNFIRE_C51_DCSTEPMOTOR_FUNC.C PRINT(.\build\Debug\src\gunfire_C51
                    -_DCStepMotor_func.lst) OMF2 TABS(4) CODE NOCOND SYMBOLS OPTIMIZE(8,SPEED) SMALL ROM(LARGE) INCDIR(.\..\..\custom_include
                    -;D:\Keil_v5\C51\INC;.\src;.\inc) DEFINE(__UVISION_VERSION=526) OBJECT(.\build\Debug\src\gunfire_C51_DCStepMotor_func.o)

line level    source

   1          #include "gunfire_C51_DCStepMotor_func.h"
   2          
   3          #include <gunfire_condefine.h>
   4          
   5          
   6          
   7          /*直流步进电机28BYJ-48*/
   8          // 脉冲序列（正向旋转）
   9          static gu8 gunfire_DCStepMotor_pulses[GUNFIRE_C51_DCSTEPMOTOR_PULSES_SIZE]={0x01,0x03,0x02,0x06,0x04,0x0C,
             -0x08,0x09};
  10          
  11          //步进电机的初始速度
  12          static gu8 gunfire_DCStepMotor_Speed;
  13          
  14          //
  15          static gu8 gunfire_DCStepMotor_isRunning;
  16          
  17          static gu8 G_IndependentKey_Scan(gu8 mode);
  18          
  19          
  20          void G_IndependentKey_Control()
  21          {
  22   1          gu8 key = G_IndependentKey_Scan(0);
  23   1          if(key == GUNFIRE_INDEPENDENTKEY1_PRESSED)//反向
  24   1              G_DCStepMotor_Reverse();
  25   1          if(key == GUNFIRE_INDEPENDENTKEY2_PRESSED)//加速
  26   1              G_DCStepMotor_SpeedUp();
  27   1          if(key==GUNFIRE_INDEPENDENTKEY3_PRESSED)//减速
  28   1              G_DCStepMotor_SpeedDown();
  29   1          if(key ==GUNFIRE_INDEPENDENTKEY4_PRESSED)//暂停
  30   1              G_DCStepMotor_Stop();
  31   1      }
  32          
  33          
  34          /*
  35          初始化
  36          */
  37          void G_DCStepMotor_Initial()
  38          {
  39   1          GUNFIRE_DC_STEP_MOTOR_CONTROL = 0x00;
  40   1          gunfire_DCStepMotor_Speed = GUNFIRE_C51_DCSTEPMOTOR_MAXSPEED;
  41   1          gunfire_DCStepMotor_isRunning = 1;
  42   1      }
  43          
  44          
  45          /**
  46           * @brief 步进电机运行
  47           * 
  48           */
  49          void G_DCStepMotor_Run()
  50          {
  51   1          int i;
  52   1          G_IndependentKey_Control();
C51 COMPILER V9.60.0.0   GUNFIRE_C51_DCSTEPMOTOR_FUNC                                      05/26/2022 15:09:49 PAGE 2   

  53   1          while(gunfire_DCStepMotor_isRunning)
  54   1          {
  55   2              for(i = 0; i < GUNFIRE_C51_DCSTEPMOTOR_PULSES_SIZE; i++)
  56   2              {
  57   3                  GUNFIRE_DC_STEP_MOTOR_CONTROL = gunfire_DCStepMotor_pulses[i];
  58   3                  delay_ms(gunfire_DCStepMotor_Speed);
  59   3                  GUNFIRE_DC_STEP_MOTOR_CONTROL = 0x00;
  60   3                  G_IndependentKey_Control();
  61   3              }
  62   2              
  63   2          }
  64   1      }
  65          
  66          /**
  67           * @brief 步进电机暂停运行
  68           * 
  69           */
  70          void G_DCStepMotor_Stop()
  71          {
  72   1              gunfire_DCStepMotor_isRunning = !gunfire_DCStepMotor_isRunning;
  73   1      }
  74          
  75          /**
  76           * @brief 将步进电机的脉冲序列逆置，用于实现电机的反向
  77           * 
  78           */
  79          void  G_Reverse_Pluses()
  80          {
  81   1          gu8 i,j;
  82   1          for(i=0,j=7;i<j;i++,j--)
  83   1          {
  84   2              G_Swap(&gunfire_DCStepMotor_pulses[i],&gunfire_DCStepMotor_pulses[j]);
  85   2          }
  86   1      }
  87          
  88          /**
  89           * @brief 电机加速。
  90           * 实质是控制脉冲的频率，通过delay函数来实现
  91           */
  92          void G_DCStepMotor_SpeedUp()
  93          {
  94   1          if(gunfire_DCStepMotor_Speed>GUNFIRE_C51_DCSTEPMOTOR_MAXSPEED)
  95   1              gunfire_DCStepMotor_Speed--;
  96   1      }
  97          
  98          /**
  99           * @brief 电机减速
 100           * 实质是控制脉冲的频率，通过delay函数来实现
 101           * @param down 一次减速多少
 102           */
 103          void G_DCStepMotor_SpeedDown()
 104          {
 105   1          if(gunfire_DCStepMotor_Speed < GUNFIRE_C51_DCSTEPMOTOR_MINSPEED)
 106   1              gunfire_DCStepMotor_Speed++;
 107   1      }
 108          
 109          /**
 110           * @brief 电机转向反转
 111           * 
 112           */
 113          void G_DCStepMotor_Reverse()
 114          {
C51 COMPILER V9.60.0.0   GUNFIRE_C51_DCSTEPMOTOR_FUNC                                      05/26/2022 15:09:49 PAGE 3   

 115   1          G_Reverse_Pluses();
 116   1      }
 117          
 118          static gu8 G_IndependentKey_Scan(gu8 mode)
 119          {
 120   1          static gu8 key = 1;
 121   1          if(mode) key = 1;
 122   1          if(key==1&&(GUNFIRE_independentKey1==0||
 123   1                      GUNFIRE_independentKey2==0||
 124   1                      GUNFIRE_independentKey3==0||
 125   1                      GUNFIRE_independentKey4==0))
 126   1          {
 127   2              delay_10us(1000);
 128   2              key=0;
 129   2              if(GUNFIRE_independentKey1==0)
 130   2              return GUNFIRE_INDEPENDENTKEY1_PRESSED;
 131   2              if(GUNFIRE_independentKey2==0)
 132   2              return GUNFIRE_INDEPENDENTKEY2_PRESSED;
 133   2              if(GUNFIRE_independentKey3==0)
 134   2              return GUNFIRE_INDEPENDENTKEY3_PRESSED;
 135   2              if(GUNFIRE_independentKey4)
 136   2              return GUNFIRE_INDEPENDENTKEY4_PRESSED;
 137   2          }
 138   1          else if(GUNFIRE_independentKey1==1&&
 139   1                  GUNFIRE_independentKey2==1&&
 140   1                  GUNFIRE_independentKey3==1&&
 141   1                  GUNFIRE_independentKey4==1)
 142   1          {
 143   2              key =1;
 144   2          }
 145   1          
 146   1          return GUNFIRE_INDEPENDENTKEY_UNPRESS;
 147   1      }
 148          
 149          
C51 COMPILER V9.60.0.0   GUNFIRE_C51_DCSTEPMOTOR_FUNC                                      05/26/2022 15:09:49 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _sleep (BEGIN)
                                           ; SOURCE LINE # 55
;---- Variable 'timeout' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 56
0000         ?C0001:
                                           ; SOURCE LINE # 57
0000 EF                MOV     A,R7
0001 1F                DEC     R7
0002 AC06              MOV     R4,AR6
0004 7001              JNZ     ?C0049
0006 1E                DEC     R6
0007         ?C0049:
0007 4C                ORL     A,R4
0008 70F6              JNZ     ?C0001
                                           ; SOURCE LINE # 58
000A 22                RET     
             ; FUNCTION _sleep (END)

             ; FUNCTION _delay_10us (BEGIN)
                                           ; SOURCE LINE # 59
;---- Variable 'ten_us' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 60
0000         ?C0004:
                                           ; SOURCE LINE # 61
0000 EF                MOV     A,R7
0001 1F                DEC     R7
0002 AC06              MOV     R4,AR6
0004 7001              JNZ     ?C0050
0006 1E                DEC     R6
0007         ?C0050:
0007 4C                ORL     A,R4
0008 70F6              JNZ     ?C0004
                                           ; SOURCE LINE # 62
000A 22                RET     
             ; FUNCTION _delay_10us (END)

             ; FUNCTION _delay_ms (BEGIN)
                                           ; SOURCE LINE # 64
;---- Variable 'ms' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 65
                                           ; SOURCE LINE # 67
;---- Variable 'i' assigned to Register 'R4/R5' ----
0000 E4                CLR     A
0001 FD                MOV     R5,A
0002 FC                MOV     R4,A
0003         ?C0007:
0003 C3                CLR     C
0004 ED                MOV     A,R5
0005 9F                SUBB    A,R7
0006 EC                MOV     A,R4
0007 9E                SUBB    A,R6
0008 5014              JNC     ?C0013
                                           ; SOURCE LINE # 68
;---- Variable 'j' assigned to Register 'R2/R3' ----
000A 7B6E              MOV     R3,#06EH
000C 7A00              MOV     R2,#00H
000E         ?C0010:
000E EB                MOV     A,R3
000F 1B                DEC     R3
C51 COMPILER V9.60.0.0   GUNFIRE_C51_DCSTEPMOTOR_FUNC                                      05/26/2022 15:09:49 PAGE 5   

0010 7001              JNZ     ?C0051
0012 1A                DEC     R2
0013         ?C0051:
0013 EB                MOV     A,R3
0014 4A                ORL     A,R2
0015 70F7              JNZ     ?C0010
0017         ?C0009:
0017 0D                INC     R5
0018 BD0001            CJNE    R5,#00H,?C0052
001B 0C                INC     R4
001C         ?C0052:
001C 80E5              SJMP    ?C0007
                                           ; SOURCE LINE # 69
001E         ?C0013:
001E 22                RET     
             ; FUNCTION _delay_ms (END)

             ; FUNCTION _G_Swap (BEGIN)
                                           ; SOURCE LINE # 71
0000 8B00        R     MOV     dest1,R3
0002 8A00        R     MOV     dest1+01H,R2
0004 8900        R     MOV     dest1+02H,R1
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 74
0006 120000      E     LCALL   ?C?CLDPTR
0009 FF                MOV     R7,A
;---- Variable 'tmp' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 75
000A AB00        R     MOV     R3,dest2
000C AA00        R     MOV     R2,dest2+01H
000E A900        R     MOV     R1,dest2+02H
0010 120000      E     LCALL   ?C?CLDPTR
0013 AB00        R     MOV     R3,dest1
0015 AA00        R     MOV     R2,dest1+01H
0017 A900        R     MOV     R1,dest1+02H
0019 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 76
001C AB00        R     MOV     R3,dest2
001E AA00        R     MOV     R2,dest2+01H
0020 A900        R     MOV     R1,dest2+02H
0022 EF                MOV     A,R7
0023 020000      E     LJMP    ?C?CSTPTR
             ; FUNCTION _G_Swap (END)

             ; FUNCTION G_IndependentKey_Control (BEGIN)
                                           ; SOURCE LINE # 20
                                           ; SOURCE LINE # 21
                                           ; SOURCE LINE # 22
0000 E4                CLR     A
0001 FF                MOV     R7,A
0002 120000      R     LCALL   _G_IndependentKey_Scan
0005 8F00        R     MOV     key,R7
                                           ; SOURCE LINE # 23
0007 EF                MOV     A,R7
0008 6401              XRL     A,#01H
000A 7003              JNZ     ?C0015
                                           ; SOURCE LINE # 24
000C 120000      R     LCALL   G_DCStepMotor_Reverse
000F         ?C0015:
                                           ; SOURCE LINE # 25
000F E500        R     MOV     A,key
0011 6402              XRL     A,#02H
C51 COMPILER V9.60.0.0   GUNFIRE_C51_DCSTEPMOTOR_FUNC                                      05/26/2022 15:09:49 PAGE 6   

0013 7003              JNZ     ?C0016
                                           ; SOURCE LINE # 26
0015 120000      R     LCALL   G_DCStepMotor_SpeedUp
0018         ?C0016:
                                           ; SOURCE LINE # 27
0018 E500        R     MOV     A,key
001A 6403              XRL     A,#03H
001C 7003              JNZ     ?C0017
                                           ; SOURCE LINE # 28
001E 120000      R     LCALL   G_DCStepMotor_SpeedDown
0021         ?C0017:
                                           ; SOURCE LINE # 29
0021 E500        R     MOV     A,key
0023 6404              XRL     A,#04H
0025 7003              JNZ     ?C0019
                                           ; SOURCE LINE # 30
0027 120000      R     LCALL   G_DCStepMotor_Stop
                                           ; SOURCE LINE # 31
002A         ?C0019:
002A 22                RET     
             ; FUNCTION G_IndependentKey_Control (END)

             ; FUNCTION G_DCStepMotor_Initial (BEGIN)
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 38
                                           ; SOURCE LINE # 39
0000 E4                CLR     A
0001 F590              MOV     P1,A
                                           ; SOURCE LINE # 40
0003 750001      R     MOV     gunfire_DCStepMotor_Speed,#01H
                                           ; SOURCE LINE # 41
0006 750001      R     MOV     gunfire_DCStepMotor_isRunning,#01H
                                           ; SOURCE LINE # 42
0009 22                RET     
             ; FUNCTION G_DCStepMotor_Initial (END)

             ; FUNCTION G_DCStepMotor_Run (BEGIN)
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 52
0000 120000      R     LCALL   G_IndependentKey_Control
0003         ?C0021:
                                           ; SOURCE LINE # 53
0003 E500        R     MOV     A,gunfire_DCStepMotor_isRunning
0005 6031              JZ      ?C0026
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 55
0007 E4                CLR     A
0008 F500        R     MOV     i,A
000A F500        R     MOV     i+01H,A
000C         ?C0023:
000C C3                CLR     C
000D E500        R     MOV     A,i+01H
000F 9408              SUBB    A,#08H
0011 E500        R     MOV     A,i
0013 6480              XRL     A,#080H
0015 9480              SUBB    A,#080H
0017 50EA              JNC     ?C0021
                                           ; SOURCE LINE # 56
                                           ; SOURCE LINE # 57
0019 7400        R     MOV     A,#LOW gunfire_DCStepMotor_pulses
001B 2500        R     ADD     A,i+01H
C51 COMPILER V9.60.0.0   GUNFIRE_C51_DCSTEPMOTOR_FUNC                                      05/26/2022 15:09:49 PAGE 7   

001D F8                MOV     R0,A
001E E6                MOV     A,@R0
001F F590              MOV     P1,A
                                           ; SOURCE LINE # 58
0021 AF00        R     MOV     R7,gunfire_DCStepMotor_Speed
0023 7E00              MOV     R6,#00H
0025 120000      R     LCALL   _delay_ms
                                           ; SOURCE LINE # 59
0028 E4                CLR     A
0029 F590              MOV     P1,A
                                           ; SOURCE LINE # 60
002B 120000      R     LCALL   G_IndependentKey_Control
                                           ; SOURCE LINE # 61
002E 0500        R     INC     i+01H
0030 E500        R     MOV     A,i+01H
0032 70D8              JNZ     ?C0023
0034 0500        R     INC     i
0036         ?C0053:
0036 80D4              SJMP    ?C0023
                                           ; SOURCE LINE # 63
                                           ; SOURCE LINE # 64
0038         ?C0026:
0038 22                RET     
             ; FUNCTION G_DCStepMotor_Run (END)

             ; FUNCTION G_DCStepMotor_Stop (BEGIN)
                                           ; SOURCE LINE # 70
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
0000 E500        R     MOV     A,gunfire_DCStepMotor_isRunning
0002 7F00              MOV     R7,#00H
0004 7002              JNZ     ?C0027
0006 7F01              MOV     R7,#01H
0008         ?C0027:
0008         ?C0028:
0008 8F00        R     MOV     gunfire_DCStepMotor_isRunning,R7
                                           ; SOURCE LINE # 73
000A 22                RET     
             ; FUNCTION G_DCStepMotor_Stop (END)

             ; FUNCTION G_Reverse_Pluses (BEGIN)
                                           ; SOURCE LINE # 79
                                           ; SOURCE LINE # 80
                                           ; SOURCE LINE # 82
;---- Variable 'i' assigned to Register 'R6' ----
0000 E4                CLR     A
0001 FE                MOV     R6,A
;---- Variable 'j' assigned to Register 'R5' ----
0002 7D07              MOV     R5,#07H
0004         ?C0030:
0004 EE                MOV     A,R6
0005 C3                CLR     C
0006 9D                SUBB    A,R5
0007 501D              JNC     ?C0033
                                           ; SOURCE LINE # 83
                                           ; SOURCE LINE # 84
0009 7400        R     MOV     A,#LOW gunfire_DCStepMotor_pulses
000B 2E                ADD     A,R6
000C F9                MOV     R1,A
000D E4                CLR     A
000E FA                MOV     R2,A
000F FB                MOV     R3,A
C51 COMPILER V9.60.0.0   GUNFIRE_C51_DCSTEPMOTOR_FUNC                                      05/26/2022 15:09:49 PAGE 8   

0010 C001              PUSH    AR1
0012 7400        R     MOV     A,#LOW gunfire_DCStepMotor_pulses
0014 2D                ADD     A,R5
0015 F9                MOV     R1,A
0016 E4                CLR     A
0017 F500        R     MOV     ?_G_Swap?BYTE+03H,A
0019 F500        R     MOV     ?_G_Swap?BYTE+04H,A
001B 8900        R     MOV     ?_G_Swap?BYTE+05H,R1
001D D001              POP     AR1
001F 120000      R     LCALL   _G_Swap
                                           ; SOURCE LINE # 85
0022 0E                INC     R6
0023 1D                DEC     R5
0024 80DE              SJMP    ?C0030
                                           ; SOURCE LINE # 86
0026         ?C0033:
0026 22                RET     
             ; FUNCTION G_Reverse_Pluses (END)

             ; FUNCTION G_DCStepMotor_SpeedUp (BEGIN)
                                           ; SOURCE LINE # 92
                                           ; SOURCE LINE # 93
                                           ; SOURCE LINE # 94
0000 D3                SETB    C
0001 E500        R     MOV     A,gunfire_DCStepMotor_Speed
0003 9401              SUBB    A,#01H
0005 7480              MOV     A,#080H
0007 9480              SUBB    A,#080H
0009 4002              JC      ?C0035
                                           ; SOURCE LINE # 95
000B 1500        R     DEC     gunfire_DCStepMotor_Speed
                                           ; SOURCE LINE # 96
000D         ?C0035:
000D 22                RET     
             ; FUNCTION G_DCStepMotor_SpeedUp (END)

             ; FUNCTION G_DCStepMotor_SpeedDown (BEGIN)
                                           ; SOURCE LINE # 103
                                           ; SOURCE LINE # 104
                                           ; SOURCE LINE # 105
0000 C3                CLR     C
0001 E500        R     MOV     A,gunfire_DCStepMotor_Speed
0003 9405              SUBB    A,#05H
0005 7480              MOV     A,#080H
0007 9480              SUBB    A,#080H
0009 5002              JNC     ?C0037
                                           ; SOURCE LINE # 106
000B 0500        R     INC     gunfire_DCStepMotor_Speed
                                           ; SOURCE LINE # 107
000D         ?C0037:
000D 22                RET     
             ; FUNCTION G_DCStepMotor_SpeedDown (END)

             ; FUNCTION G_DCStepMotor_Reverse (BEGIN)
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 114
                                           ; SOURCE LINE # 115
0000 020000      R     LJMP    G_Reverse_Pluses
             ; FUNCTION G_DCStepMotor_Reverse (END)

             ; FUNCTION _G_IndependentKey_Scan (BEGIN)
                                           ; SOURCE LINE # 118
C51 COMPILER V9.60.0.0   GUNFIRE_C51_DCSTEPMOTOR_FUNC                                      05/26/2022 15:09:49 PAGE 9   

;---- Variable 'mode' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 119
                                           ; SOURCE LINE # 121
0000 EF                MOV     A,R7
0001 6003              JZ      ?C0039
0003 750001      R     MOV     key,#01H
0006         ?C0039:
                                           ; SOURCE LINE # 122
0006 E500        R     MOV     A,key
0008 6401              XRL     A,#01H
000A 702E              JNZ     ?C0040
000C 30B109            JNB     GUNFIRE_independentKey1,?C0041
000F 30B006            JNB     GUNFIRE_independentKey2,?C0041
0012 30B203            JNB     GUNFIRE_independentKey3,?C0041
0015 20B322            JB      GUNFIRE_independentKey4,?C0040
0018         ?C0041:
                                           ; SOURCE LINE # 126
                                           ; SOURCE LINE # 127
0018 7FE8              MOV     R7,#0E8H
001A 7E03              MOV     R6,#03H
001C 120000      R     LCALL   _delay_10us
                                           ; SOURCE LINE # 128
001F E4                CLR     A
0020 F500        R     MOV     key,A
                                           ; SOURCE LINE # 129
0022 20B103            JB      GUNFIRE_independentKey1,?C0042
                                           ; SOURCE LINE # 130
0025 7F01              MOV     R7,#01H
0027 22                RET     
0028         ?C0042:
                                           ; SOURCE LINE # 131
0028 20B003            JB      GUNFIRE_independentKey2,?C0044
                                           ; SOURCE LINE # 132
002B 7F02              MOV     R7,#02H
002D 22                RET     
002E         ?C0044:
                                           ; SOURCE LINE # 133
002E 20B203            JB      GUNFIRE_independentKey3,?C0045
                                           ; SOURCE LINE # 134
0031 7F03              MOV     R7,#03H
0033 22                RET     
0034         ?C0045:
                                           ; SOURCE LINE # 135
0034 30B312            JNB     GUNFIRE_independentKey4,?C0047
                                           ; SOURCE LINE # 136
0037 7F04              MOV     R7,#04H
0039 22                RET     
                                           ; SOURCE LINE # 137
003A         ?C0040:
                                           ; SOURCE LINE # 138
003A 30B10C            JNB     GUNFIRE_independentKey1,?C0047
003D 30B009            JNB     GUNFIRE_independentKey2,?C0047
0040 30B206            JNB     GUNFIRE_independentKey3,?C0047
0043 30B303            JNB     GUNFIRE_independentKey4,?C0047
                                           ; SOURCE LINE # 142
                                           ; SOURCE LINE # 143
0046 750001      R     MOV     key,#01H
                                           ; SOURCE LINE # 144
0049         ?C0047:
                                           ; SOURCE LINE # 146
0049 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 147
C51 COMPILER V9.60.0.0   GUNFIRE_C51_DCSTEPMOTOR_FUNC                                      05/26/2022 15:09:49 PAGE 10  

004B         ?C0043:
004B 22                RET     
             ; FUNCTION _G_IndependentKey_Scan (END)

C51 COMPILER V9.60.0.0   GUNFIRE_C51_DCSTEPMOTOR_FUNC                                      05/26/2022 15:09:49 PAGE 11  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
GUNFIRE_HC595_SRCLK. . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
T2 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
GUNFIRE_DT_SegSelection_A0 . . . . . .  ABSBIT   -----  BIT      00A2H  1
GUNFIRE_DT_SegSelection_A1 . . . . . .  ABSBIT   -----  BIT      00A3H  1
GUNFIRE_DT_SegSelection_A2 . . . . . .  ABSBIT   -----  BIT      00A4H  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
G_IndependentKey_Control . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  key. . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
gunfire_DCStepMotor_pulses . . . . . .  STATIC   DATA   ARRAY    0001H  8
GUNFIRE_beep . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A5H  1
G_DCStepMotor_Initial. . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
gs8. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
gu8. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
EXF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
_sleep . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  timeout. . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
RCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
T2EX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
G_DCStepMotor_Reverse. . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
RCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
C_T2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
RCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
TCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
_G_IndependentKey_Scan . . . . . . . .  STATIC   CODE   PROC     0000H  -----
  mode . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  key. . . . . . . . . . . . . . . . .  STATIC   DATA   U_CHAR   0000H  1
GUNFIRE_HC595_RCLK . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
gunfire_DCStepMotor_isRunning. . . . .  STATIC   DATA   U_CHAR   0009H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
_delay_10us. . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  ten_us . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
C51 COMPILER V9.60.0.0   GUNFIRE_C51_DCSTEPMOTOR_FUNC                                      05/26/2022 15:09:49 PAGE 12  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


gs32 . . . . . . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
gu32 . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
gs16 . . . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
_G_Swap. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  dest1. . . . . . . . . . . . . . . .  AUTO     DATA   PTR      0000H  3
  dest2. . . . . . . . . . . . . . . .  AUTO     DATA   PTR      0003H  3
  tmp. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
gu16 . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
CP_RL2 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
TH2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
TL2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
G_DCStepMotor_SpeedDown. . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
_delay_ms. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  ms . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0004H  2
  j. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0002H  2
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
PT2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
EXEN2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
GUNFIRE_DC_Step_Motor_Phase_A. . . . .  ABSBIT   -----  BIT      0093H  1
gunfire_DCStepMotor_Speed. . . . . . .  STATIC   DATA   U_CHAR   000AH  1
GUNFIRE_DC_Step_Motor_Phase_B. . . . .  ABSBIT   -----  BIT      0092H  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
GUNFIRE_DC_Step_Motor_Phase_C. . . . .  ABSBIT   -----  BIT      0091H  1
GUNFIRE_independentKey1. . . . . . . .  ABSBIT   -----  BIT      00B1H  1
C51 COMPILER V9.60.0.0   GUNFIRE_C51_DCSTEPMOTOR_FUNC                                      05/26/2022 15:09:49 PAGE 13  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


GUNFIRE_DC_Step_Motor_Phase_D. . . . .  ABSBIT   -----  BIT      0090H  1
GUNFIRE_independentKey2. . . . . . . .  ABSBIT   -----  BIT      00B0H  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
GUNFIRE_independentKey3. . . . . . . .  ABSBIT   -----  BIT      00B2H  1
G_Reverse_Pluses . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
  j. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
GUNFIRE_independentKey4. . . . . . . .  ABSBIT   -----  BIT      00B3H  1
G_DCStepMotor_Stop . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
GUNFIRE_HC595_SER. . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
GUNFIRE_DC_Motor . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
G_DCStepMotor_Run. . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  AUTO     DATA   INT      0000H  2
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
G_DCStepMotor_SpeedUp. . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    358    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
