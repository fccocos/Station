C51 COMPILER V9.60.0.0   DS18B20                                                           05/31/2022 19:23:55 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN .\build\Target 1\App\ds18b20\ds18b20.o
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.exe .\APP\DS18B20\DS18B20.C PRINT(.\build\Target 1\App\ds18b20\ds18b20.lst) 
                    -OMF2 TABS(4) CODE NOCOND SYMBOLS OPTIMIZE(8,SPEED) SMALL ROM(LARGE) INCDIR(.\App\ds18b20;.\App\msg;.\Public;D:\Keil_v5\C
                    -51\INC) DEFINE(__UVISION_VERSION=526) OBJECT(.\build\Target 1\App\ds18b20\ds18b20.o)

line level    source

   1          
   2          /**
   3           * @file ds18b20.c
   4           * @author your name (you@domain.com)
   5           * @brief DS18B20温度读取过程的实现 
   6           * 1. reset
   7           * 2. send the SKIP_ROM(0xCC) command to DS18B20
   8           * 3. send the command of staring converter(0x44) to DS18B20
   9           * 4. delay
  10           * 5. send the SKIP_ROM(0xCC) command to DS18B20
  11           * 6. send the command of reading the memory of DS18B20(0xBE)
  12           * 6. read two bytes from DS18B20
  13           * 7. over
  14           * DS18B20温度读取的过程，其本质就是写命令和读数据的过程
  15           * @version 0.1
  16           * @date 2022-05-31
  17           * 
  18           * @copyright Copyright (c) 2022
  19           * 
  20           */
  21          
  22          #include "ds18b20.h"
  23          #include <intrins.h>
  24          
  25          /*初始化序列*/
  26          u8 ds18b20_init()
  27          {
  28   1          ds18b20_reset();
  29   1          return ds18b20_check();
  30   1      }
  31          
  32          /*启动DS18B20的转换*/
  33          void ds18b20_start()
  34          {
  35   1          ds18b20_reset();//复位
  36   1          ds18b20_check();//检查是否连结了DS18B20
  37   1          ds18b20_write_one_byte(0xCC);//SKIP_ROM 命令
  38   1          ds18b20_write_one_byte(0x44);//转换命令
  39   1      }
  40          
  41          void ds18b20_reset()
  42          {
  43   1          DS18B20_BUS = 0;
  44   1          delay_10us(75); // 750us
  45   1          DS18B20_BUS = 1;
  46   1          delay_10us(2); // 20us
  47   1      }
  48          /*检测DS10B20是否响应， 响应返回0，不响应返回1, 应答信号由DS18B20给出*/
  49          u8 ds18b20_check()
  50          {
  51   1          u8 time_tmp = 0;
  52   1          if (DS18B20_BUS && time_tmp < 20)
  53   1          {
C51 COMPILER V9.60.0.0   DS18B20                                                           05/31/2022 19:23:55 PAGE 2   

  54   2              time_tmp++;
  55   2              delay_10us(1);
  56   2          }
  57   1          if (time_tmp >= 20)
  58   1              return 1;
  59   1          else
  60   1              time_tmp = 0;
  61   1          while ((!DS18B20_BUS) && time_tmp < 20)
  62   1          {
  63   2              time_tmp++;
  64   2              delay_10us(1);
  65   2          }
  66   1          if (time_tmp >= 20)
  67   1              return 1;
  68   1          return 0;
  69   1      }
  70          
  71          void ds18b20_write_one_byte(u8 bstr)
  72          {
  73   1          u8 i = 0;
  74   1          u8 tmp = 0;
  75   1          for (i = 0; i < 8; i++)
  76   1          {
  77   2              //从地位开始写数据
  78   2              tmp = (bstr & 0x01);
  79   2              bstr >>= 1;
  80   2              if (tmp)
  81   2              {
  82   3                  //写1时序
  83   3                  DS18B20_BUS = 0;
  84   3                  _nop_();
  85   3                  _nop_(); // 2us
  86   3                  DS18B20_BUS = 1;
  87   3                  delay_10us(6); // 60us
  88   3              }
  89   2              else
  90   2              {
  91   3                  //写0时序
  92   3                  DS18B20_BUS = 0;
  93   3                  delay_10us(6);
  94   3                  DS18B20_BUS = 1;
  95   3                  _nop_();
  96   3                  _nop_();
  97   3              }
  98   2          }
  99   1      }
 100          u8 ds18b20_read_one_byte()
 101          {
 102   1          u8 value=0;
 103   1          u8 tmp=0;
 104   1          u8 i=0;
 105   1          for (i = 0; i <8; i++)
 106   1          {
 107   2              //读地位字节从高位开始存储
 108   2              tmp = ds18b20_read_one_bit();
 109   2              value = (tmp<<7)|(value>>1);
 110   2          }
 111   1          return value;
 112   1      }
 113          u8 ds18b20_read_one_bit()
 114          {
 115   1          u8 dat = 0;
C51 COMPILER V9.60.0.0   DS18B20                                                           05/31/2022 19:23:55 PAGE 3   

 116   1          //读1时序
 117   1          DS18B20_BUS = 0;
 118   1          _nop_();
 119   1          _nop_(); // 2us
 120   1          DS18B20_BUS = 1;
 121   1          _nop_();
 122   1          _nop_(); // 2us
 123   1          if (DS18B20_BUS)
 124   1              dat = 1;
 125   1          else
 126   1              dat = 0;
 127   1          delay_10us(5);
 128   1          return dat;
 129   1      }
 130          /*获取DS18B20的温度数据*/
 131          float ds18b20_get_tempurature()
 132          {
 133   1          float tempur;
 134   1          u16 value=0;
 135   1          u8 tmpL=0;
 136   1          u8 tmpH=0;
 137   1          
 138   1          // 开始将温度数据转换
 139   1          ds18b20_start();
 140   1          ds18b20_reset();//复位
 141   1          ds18b20_check();
 142   1          ds18b20_write_one_byte(0xcc);//SKIP_ROM
 143   1          ds18b20_write_one_byte(0xbe);//读存储器
 144   1          //获取温度数据
 145   1          tmpL = ds18b20_read_one_byte();//低字节
 146   1          tmpH = ds18b20_read_one_byte();//高字节
 147   1          value = (tmpH<<8)+tmpL;//合并为16为
 148   1          
 149   1          //判断温度数据的正负号
 150   1          if((value&0xf800)==0xf800)
 151   1          {
 152   2              //温度数据为负数，负数取补码（=反码+1）
 153   2              value = (~value)+1;
 154   2              tempur = value*(-0.0625);
 155   2          }
 156   1          else
 157   1          {
 158   2              //温度数据为负数
 159   2              tempur = value*(0.0625);
 160   2          }
 161   1          return tempur;
 162   1      }
C51 COMPILER V9.60.0.0   DS18B20                                                           05/31/2022 19:23:55 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION ds18b20_init (BEGIN)
                                           ; SOURCE LINE # 26
                                           ; SOURCE LINE # 27
                                           ; SOURCE LINE # 28
0000 120000      R     LCALL   ds18b20_reset
                                           ; SOURCE LINE # 29
0003 020000      R     LJMP    ds18b20_check
             ; FUNCTION ds18b20_init (END)

             ; FUNCTION ds18b20_start (BEGIN)
                                           ; SOURCE LINE # 33
                                           ; SOURCE LINE # 34
                                           ; SOURCE LINE # 35
0000 120000      R     LCALL   ds18b20_reset
                                           ; SOURCE LINE # 36
0003 120000      R     LCALL   ds18b20_check
                                           ; SOURCE LINE # 37
0006 7FCC              MOV     R7,#0CCH
0008 120000      R     LCALL   _ds18b20_write_one_byte
                                           ; SOURCE LINE # 38
000B 7F44              MOV     R7,#044H
000D 020000      R     LJMP    _ds18b20_write_one_byte
             ; FUNCTION ds18b20_start (END)

             ; FUNCTION ds18b20_reset (BEGIN)
                                           ; SOURCE LINE # 41
                                           ; SOURCE LINE # 42
                                           ; SOURCE LINE # 43
0000 C2B7              CLR     DS18B20_BUS
                                           ; SOURCE LINE # 44
0002 7F4B              MOV     R7,#04BH
0004 7E00              MOV     R6,#00H
0006 120000      E     LCALL   _delay_10us
                                           ; SOURCE LINE # 45
0009 D2B7              SETB    DS18B20_BUS
                                           ; SOURCE LINE # 46
000B 7F02              MOV     R7,#02H
000D 7E00              MOV     R6,#00H
000F 020000      E     LJMP    _delay_10us
             ; FUNCTION ds18b20_reset (END)

             ; FUNCTION ds18b20_check (BEGIN)
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 51
0000 E4                CLR     A
0001 F500        R     MOV     time_tmp,A
                                           ; SOURCE LINE # 52
0003 30B714            JNB     DS18B20_BUS,?C0004
0006 C3                CLR     C
0007 E500        R     MOV     A,time_tmp
0009 9414              SUBB    A,#014H
000B 7480              MOV     A,#080H
000D 9480              SUBB    A,#080H
000F 5009              JNC     ?C0004
                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 54
0011 0500        R     INC     time_tmp
                                           ; SOURCE LINE # 55
C51 COMPILER V9.60.0.0   DS18B20                                                           05/31/2022 19:23:55 PAGE 5   

0013 7F01              MOV     R7,#01H
0015 7E00              MOV     R6,#00H
0017 120000      E     LCALL   _delay_10us
                                           ; SOURCE LINE # 56
001A         ?C0004:
                                           ; SOURCE LINE # 57
001A C3                CLR     C
001B E500        R     MOV     A,time_tmp
001D 9414              SUBB    A,#014H
001F 7480              MOV     A,#080H
0021 9480              SUBB    A,#080H
0023 4003              JC      ?C0005
                                           ; SOURCE LINE # 58
0025 7F01              MOV     R7,#01H
0027 22                RET     
0028         ?C0005:
                                           ; SOURCE LINE # 60
0028 E4                CLR     A
0029 F500        R     MOV     time_tmp,A
002B         ?C0008:
                                           ; SOURCE LINE # 61
002B 20B716            JB      DS18B20_BUS,?C0009
002E C3                CLR     C
002F E500        R     MOV     A,time_tmp
0031 9414              SUBB    A,#014H
0033 7480              MOV     A,#080H
0035 9480              SUBB    A,#080H
0037 500B              JNC     ?C0009
                                           ; SOURCE LINE # 62
                                           ; SOURCE LINE # 63
0039 0500        R     INC     time_tmp
                                           ; SOURCE LINE # 64
003B 7F01              MOV     R7,#01H
003D 7E00              MOV     R6,#00H
003F 120000      E     LCALL   _delay_10us
                                           ; SOURCE LINE # 65
0042 80E7              SJMP    ?C0008
0044         ?C0009:
                                           ; SOURCE LINE # 66
0044 C3                CLR     C
0045 E500        R     MOV     A,time_tmp
0047 9414              SUBB    A,#014H
0049 7480              MOV     A,#080H
004B 9480              SUBB    A,#080H
004D 7F00              MOV     R7,#00H
004F 4002              JC      ?C0010
                                           ; SOURCE LINE # 67
0051 7F01              MOV     R7,#01H
0053         ?C0010:
                                           ; SOURCE LINE # 68
                                           ; SOURCE LINE # 69
0053         ?C0006:
0053 22                RET     
             ; FUNCTION ds18b20_check (END)

             ; FUNCTION _ds18b20_write_one_byte (BEGIN)
                                           ; SOURCE LINE # 71
0000 8F00        R     MOV     bstr,R7
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 73
0002 E4                CLR     A
0003 F500        R     MOV     i,A
C51 COMPILER V9.60.0.0   DS18B20                                                           05/31/2022 19:23:55 PAGE 6   

                                           ; SOURCE LINE # 74
0005 F500        R     MOV     tmp,A
                                           ; SOURCE LINE # 75
0007 F500        R     MOV     i,A
0009         ?C0011:
0009 C3                CLR     C
000A E500        R     MOV     A,i
000C 9408              SUBB    A,#08H
000E 7480              MOV     A,#080H
0010 9480              SUBB    A,#080H
0012 5030              JNC     ?C0016
                                           ; SOURCE LINE # 76
                                           ; SOURCE LINE # 78
0014 E500        R     MOV     A,bstr
0016 5401              ANL     A,#01H
0018 F500        R     MOV     tmp,A
                                           ; SOURCE LINE # 79
001A E500        R     MOV     A,bstr
001C C3                CLR     C
001D 13                RRC     A
001E F500        R     MOV     bstr,A
                                           ; SOURCE LINE # 80
0020 E500        R     MOV     A,tmp
0022 600F              JZ      ?C0014
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 83
0024 C2B7              CLR     DS18B20_BUS
                                           ; SOURCE LINE # 84
0026 00                NOP     
                                           ; SOURCE LINE # 85
0027 00                NOP     
                                           ; SOURCE LINE # 86
0028 D2B7              SETB    DS18B20_BUS
                                           ; SOURCE LINE # 87
002A 7F06              MOV     R7,#06H
002C 7E00              MOV     R6,#00H
002E 120000      E     LCALL   _delay_10us
                                           ; SOURCE LINE # 88
0031 800D              SJMP    ?C0013
0033         ?C0014:
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 92
0033 C2B7              CLR     DS18B20_BUS
                                           ; SOURCE LINE # 93
0035 7F06              MOV     R7,#06H
0037 7E00              MOV     R6,#00H
0039 120000      E     LCALL   _delay_10us
                                           ; SOURCE LINE # 94
003C D2B7              SETB    DS18B20_BUS
                                           ; SOURCE LINE # 95
003E 00                NOP     
                                           ; SOURCE LINE # 96
003F 00                NOP     
                                           ; SOURCE LINE # 97
                                           ; SOURCE LINE # 98
0040         ?C0013:
0040 0500        R     INC     i
0042 80C5              SJMP    ?C0011
                                           ; SOURCE LINE # 99
0044         ?C0016:
0044 22                RET     
             ; FUNCTION _ds18b20_write_one_byte (END)
C51 COMPILER V9.60.0.0   DS18B20                                                           05/31/2022 19:23:55 PAGE 7   


             ; FUNCTION ds18b20_read_one_byte (BEGIN)
                                           ; SOURCE LINE # 100
                                           ; SOURCE LINE # 101
                                           ; SOURCE LINE # 102
0000 E4                CLR     A
0001 F500        R     MOV     value,A
                                           ; SOURCE LINE # 103
;---- Variable 'tmp' assigned to Register 'R7' ----
0003 FF                MOV     R7,A
                                           ; SOURCE LINE # 104
0004 F500        R     MOV     i,A
                                           ; SOURCE LINE # 105
0006 F500        R     MOV     i,A
0008         ?C0017:
0008 E500        R     MOV     A,i
000A C3                CLR     C
000B 9408              SUBB    A,#08H
000D 7480              MOV     A,#080H
000F 9480              SUBB    A,#080H
0011 5016              JNC     ?C0018
                                           ; SOURCE LINE # 106
                                           ; SOURCE LINE # 108
0013 120000      R     LCALL   ds18b20_read_one_bit
                                           ; SOURCE LINE # 109
0016 EF                MOV     A,R7
0017 C4                SWAP    A
0018 33                RLC     A
0019 33                RLC     A
001A 33                RLC     A
001B 5480              ANL     A,#080H
001D FE                MOV     R6,A
001E E500        R     MOV     A,value
0020 C3                CLR     C
0021 13                RRC     A
0022 4E                ORL     A,R6
0023 F500        R     MOV     value,A
                                           ; SOURCE LINE # 110
0025 0500        R     INC     i
0027 80DF              SJMP    ?C0017
0029         ?C0018:
                                           ; SOURCE LINE # 111
0029 AF00        R     MOV     R7,value
                                           ; SOURCE LINE # 112
002B 22                RET     
             ; FUNCTION ds18b20_read_one_byte (END)

             ; FUNCTION ds18b20_read_one_bit (BEGIN)
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 114
                                           ; SOURCE LINE # 115
0000 E4                CLR     A
0001 F500        R     MOV     dat,A
                                           ; SOURCE LINE # 117
0003 C2B7              CLR     DS18B20_BUS
                                           ; SOURCE LINE # 118
0005 00                NOP     
                                           ; SOURCE LINE # 119
0006 00                NOP     
                                           ; SOURCE LINE # 120
0007 D2B7              SETB    DS18B20_BUS
                                           ; SOURCE LINE # 121
C51 COMPILER V9.60.0.0   DS18B20                                                           05/31/2022 19:23:55 PAGE 8   

0009 00                NOP     
                                           ; SOURCE LINE # 122
000A 00                NOP     
                                           ; SOURCE LINE # 123
000B 30B705            JNB     DS18B20_BUS,?C0021
                                           ; SOURCE LINE # 124
000E 750001      R     MOV     dat,#01H
0011 8003              SJMP    ?C0022
0013         ?C0021:
                                           ; SOURCE LINE # 126
0013 E4                CLR     A
0014 F500        R     MOV     dat,A
0016         ?C0022:
                                           ; SOURCE LINE # 127
0016 7F05              MOV     R7,#05H
0018 7E00              MOV     R6,#00H
001A 120000      E     LCALL   _delay_10us
                                           ; SOURCE LINE # 128
001D AF00        R     MOV     R7,dat
                                           ; SOURCE LINE # 129
001F 22                RET     
             ; FUNCTION ds18b20_read_one_bit (END)

             ; FUNCTION ds18b20_get_tempurature (BEGIN)
                                           ; SOURCE LINE # 131
                                           ; SOURCE LINE # 132
                                           ; SOURCE LINE # 134
0000 E4                CLR     A
0001 F500        R     MOV     value,A
0003 F500        R     MOV     value+01H,A
                                           ; SOURCE LINE # 135
0005 F500        R     MOV     tmpL,A
                                           ; SOURCE LINE # 136
;---- Variable 'tmpH' assigned to Register 'R7' ----
0007 FF                MOV     R7,A
                                           ; SOURCE LINE # 139
0008 120000      R     LCALL   ds18b20_start
                                           ; SOURCE LINE # 140
000B 120000      R     LCALL   ds18b20_reset
                                           ; SOURCE LINE # 141
000E 120000      R     LCALL   ds18b20_check
                                           ; SOURCE LINE # 142
0011 7FCC              MOV     R7,#0CCH
0013 120000      R     LCALL   _ds18b20_write_one_byte
                                           ; SOURCE LINE # 143
0016 7FBE              MOV     R7,#0BEH
0018 120000      R     LCALL   _ds18b20_write_one_byte
                                           ; SOURCE LINE # 145
001B 120000      R     LCALL   ds18b20_read_one_byte
001E 8F00        R     MOV     tmpL,R7
                                           ; SOURCE LINE # 146
0020 120000      R     LCALL   ds18b20_read_one_byte
                                           ; SOURCE LINE # 147
0023 EF                MOV     A,R7
0024 FE                MOV     R6,A
0025 7C00              MOV     R4,#00H
0027 E4                CLR     A
0028 2500        R     ADD     A,tmpL
002A F500        R     MOV     value+01H,A
002C EC                MOV     A,R4
002D 3E                ADDC    A,R6
002E F500        R     MOV     value,A
C51 COMPILER V9.60.0.0   DS18B20                                                           05/31/2022 19:23:55 PAGE 9   

                                           ; SOURCE LINE # 150
0030 54F8              ANL     A,#0F8H
0032 FE                MOV     R6,A
0033 EE                MOV     A,R6
0034 B4F821            CJNE    A,#0F8H,?C0024
                                           ; SOURCE LINE # 151
                                           ; SOURCE LINE # 153
0037 E500        R     MOV     A,value+01H
0039 F4                CPL     A
003A FF                MOV     R7,A
003B E500        R     MOV     A,value
003D F4                CPL     A
003E FE                MOV     R6,A
003F EF                MOV     A,R7
0040 2401              ADD     A,#01H
0042 F500        R     MOV     value+01H,A
0044 E4                CLR     A
0045 3E                ADDC    A,R6
0046 F500        R     MOV     value,A
                                           ; SOURCE LINE # 154
0048 FC                MOV     R4,A
0049 AD00        R     MOV     R5,value+01H
004B E4                CLR     A
004C 120000      E     LCALL   ?C?FCASTI
004F E4                CLR     A
0050 FB                MOV     R3,A
0051 FA                MOV     R2,A
0052 7980              MOV     R1,#080H
0054 78BD              MOV     R0,#0BDH
                                           ; SOURCE LINE # 155
0056 800F              SJMP    ?C0028
0058         ?C0024:
                                           ; SOURCE LINE # 157
                                           ; SOURCE LINE # 159
0058 AC00        R     MOV     R4,value
005A AD00        R     MOV     R5,value+01H
005C E4                CLR     A
005D 120000      E     LCALL   ?C?FCASTI
0060 E4                CLR     A
0061 FB                MOV     R3,A
0062 FA                MOV     R2,A
0063 7980              MOV     R1,#080H
0065 783D              MOV     R0,#03DH
0067         ?C0028:
0067 120000      E     LCALL   ?C?FPMUL
006A 8F00        R     MOV     tempur+03H,R7
006C 8E00        R     MOV     tempur+02H,R6
006E 8D00        R     MOV     tempur+01H,R5
0070 8C00        R     MOV     tempur,R4
                                           ; SOURCE LINE # 160
0072         ?C0025:
                                           ; SOURCE LINE # 161
0072 AF00        R     MOV     R7,tempur+03H
0074 AE00        R     MOV     R6,tempur+02H
0076 AD00        R     MOV     R5,tempur+01H
0078 AC00        R     MOV     R4,tempur
                                           ; SOURCE LINE # 162
007A 22                RET     
             ; FUNCTION ds18b20_get_tempurature (END)

C51 COMPILER V9.60.0.0   DS18B20                                                           05/31/2022 19:23:55 PAGE 10  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
T2 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
ds18b20_reset. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
EXF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
ds18b20_start. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
ds18b20_init . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
RCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
T2EX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
RCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
C_T2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
u8 . . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
RCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
TCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
_delay_10us. . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
ds18b20_read_one_byte. . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  value. . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  tmp. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  i. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0001H  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
CP_RL2 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
ds18b20_read_one_bit . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  dat. . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
C51 COMPILER V9.60.0.0   DS18B20                                                           05/31/2022 19:23:55 PAGE 11  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
TH2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
ds18b20_get_tempurature. . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tempur . . . . . . . . . . . . . . .  AUTO     DATA   FLOAT    0000H  4
  value. . . . . . . . . . . . . . . .  AUTO     DATA   U_INT    0004H  2
  tmpL . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0006H  1
  tmpH . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
_ds18b20_write_one_byte. . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  bstr . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  i. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0001H  1
  tmp. . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0002H  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
TL2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
PT2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
u16. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
EXEN2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
ds18b20_check. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  time_tmp . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
DS18B20_BUS. . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    392    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   DS18B20                                                           05/31/2022 19:23:55 PAGE 12  

   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
