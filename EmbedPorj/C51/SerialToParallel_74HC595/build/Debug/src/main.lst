C51 COMPILER V9.60.0.0   MAIN                                                              05/25/2022 17:41:21 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\build\Debug\src\main.o
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.exe .\SRC\MAIN.C PRINT(.\build\Debug\src\main.lst) OMF2 TABS(4) CODE NOCOND 
                    -SYMBOLS OPTIMIZE(8,SPEED) SMALL ROM(LARGE) INCDIR(D:\Keil_v5\C51\INC;.\src;.\inc) DEFINE(__UVISION_VERSION=526) OBJECT(.
                    -\build\Debug\src\main.o)

line level    source

   1          #include "gunfire_condefine.h"
   2          
   3          
   4          /*实现LED点阵按行案列滚动*/
   5          
   6          //the chip 74hc595 controls maxtrix led's positive pole,
   7          //so high level  is effective.
   8          gu8 hc595_buf[8] = {
   9              0x01,0x02,0x04,0x08,
  10              0x10,0x20,0x40,0x80
  11              };
  12          
  13          void gunfire_hc595_wirte(gu8 dat)
  14          {
  15   1          //Writing data into the chip 74hc595 by serial SER
  16   1          gu8 i;
  17   1          //writing data into the chip 74hc595 ,one by one
  18   1          for(i=0;i<8;i++)
  19   1          {
  20   2              //put data into shift register by serial from high to low
  21   2              GUNFIRE_HC595_SER = dat>>7;//0000 0001->0
  22   2              dat<<=1;//0000 0001 -> 0000 0010
  23   2              // High level is effective
  24   2              GUNFIRE_HC595_SRCLK =0;
  25   2              delay_10us(1);
  26   2              GUNFIRE_HC595_SRCLK = 1;
  27   2              delay_10us(1);
  28   2          }
  29   1          //Deta from shift register to memory registers
  30   1          //high level is effective
  31   1          GUNFIRE_HC595_RCLK = 0;
  32   1          delay_10us(1);
  33   1          GUNFIRE_HC595_RCLK = 1;
  34   1      }
  35          
  36          
  37          int main()
  38          {
  39   1          gu8 i;
  40   1          //setting the negative pole of the matrix LED to low 
  41   1          GUNFIRE_LED_MAXTRIX_K = 0x00;
  42   1          while(1)
  43   1          {
  44   2              for(i=0;i<8; i++)
  45   2              {
  46   3                  //clear data
  47   3                  gunfire_hc595_wirte(0x00);
  48   3                  // get date from memory registers of 74hc595 chip
  49   3                  gunfire_hc595_wirte(hc595_buf[i]);
  50   3                  delay_ms(500);
  51   3              }
  52   2          }
  53   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              05/25/2022 17:41:21 PAGE 2   

  54          
C51 COMPILER V9.60.0.0   MAIN                                                              05/25/2022 17:41:21 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _sleep (BEGIN)
                                           ; SOURCE LINE # 39
;---- Variable 'timeout' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 40
0000         ?C0001:
                                           ; SOURCE LINE # 41
0000 EF                MOV     A,R7
0001 1F                DEC     R7
0002 AC06              MOV     R4,AR6
0004 7001              JNZ     ?C0024
0006 1E                DEC     R6
0007         ?C0024:
0007 4C                ORL     A,R4
0008 70F6              JNZ     ?C0001
                                           ; SOURCE LINE # 42
000A 22                RET     
             ; FUNCTION _sleep (END)

             ; FUNCTION L?0028 (BEGIN)
0000         L?0029:
0000 7F01              MOV     R7,#01H
0002 7E00              MOV     R6,#00H
             ; FUNCTION _delay_10us (BEGIN)
                                           ; SOURCE LINE # 43
;---- Variable 'ten_us' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 44
0004         ?C0004:
                                           ; SOURCE LINE # 45
0004 EF                MOV     A,R7
0005 1F                DEC     R7
0006 AC06              MOV     R4,AR6
0008 7001              JNZ     ?C0025
000A 1E                DEC     R6
000B         ?C0025:
000B 4C                ORL     A,R4
000C 70F6              JNZ     ?C0004
                                           ; SOURCE LINE # 46
000E 22                RET     
             ; FUNCTION _delay_10us (END)

             ; FUNCTION _delay_ms (BEGIN)
                                           ; SOURCE LINE # 48
;---- Variable 'ms' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 51
;---- Variable 'i' assigned to Register 'R4/R5' ----
0000 E4                CLR     A
0001 FD                MOV     R5,A
0002 FC                MOV     R4,A
0003         ?C0007:
0003 C3                CLR     C
0004 ED                MOV     A,R5
0005 9F                SUBB    A,R7
0006 EC                MOV     A,R4
0007 9E                SUBB    A,R6
0008 5014              JNC     ?C0013
                                           ; SOURCE LINE # 52
;---- Variable 'j' assigned to Register 'R2/R3' ----
000A 7B6E              MOV     R3,#06EH
C51 COMPILER V9.60.0.0   MAIN                                                              05/25/2022 17:41:21 PAGE 4   

000C 7A00              MOV     R2,#00H
000E         ?C0010:
000E EB                MOV     A,R3
000F 1B                DEC     R3
0010 7001              JNZ     ?C0026
0012 1A                DEC     R2
0013         ?C0026:
0013 EB                MOV     A,R3
0014 4A                ORL     A,R2
0015 70F7              JNZ     ?C0010
0017         ?C0009:
0017 0D                INC     R5
0018 BD0001            CJNE    R5,#00H,?C0027
001B 0C                INC     R4
001C         ?C0027:
001C 80E5              SJMP    ?C0007
                                           ; SOURCE LINE # 53
001E         ?C0013:
001E 22                RET     
             ; FUNCTION _delay_ms (END)

             ; FUNCTION _gunfire_hc595_wirte (BEGIN)
                                           ; SOURCE LINE # 13
;---- Variable 'dat' assigned to Register 'R5' ----
0000 AD07              MOV     R5,AR7
                                           ; SOURCE LINE # 14
                                           ; SOURCE LINE # 18
;---- Variable 'i' assigned to Register 'R3' ----
0002 E4                CLR     A
0003 FB                MOV     R3,A
0004         ?C0014:
0004 EB                MOV     A,R3
0005 C3                CLR     C
0006 9408              SUBB    A,#08H
0008 7480              MOV     A,#080H
000A 9480              SUBB    A,#080H
000C 501C              JNC     ?C0015
                                           ; SOURCE LINE # 19
                                           ; SOURCE LINE # 21
000E ED                MOV     A,R5
000F C4                SWAP    A
0010 13                RRC     A
0011 13                RRC     A
0012 13                RRC     A
0013 5401              ANL     A,#01H
0015 24FF              ADD     A,#0FFH
0017 92B4              MOV     GUNFIRE_HC595_SER,C
                                           ; SOURCE LINE # 22
0019 ED                MOV     A,R5
001A 25E0              ADD     A,ACC
001C FD                MOV     R5,A
                                           ; SOURCE LINE # 24
001D C2B6              CLR     GUNFIRE_HC595_SRCLK
                                           ; SOURCE LINE # 25
001F 120000      R     LCALL   L?0028
                                           ; SOURCE LINE # 26
0022 D2B6              SETB    GUNFIRE_HC595_SRCLK
                                           ; SOURCE LINE # 27
0024 120000      R     LCALL   L?0028
                                           ; SOURCE LINE # 28
0027 0B                INC     R3
0028 80DA              SJMP    ?C0014
C51 COMPILER V9.60.0.0   MAIN                                                              05/25/2022 17:41:21 PAGE 5   

002A         ?C0015:
                                           ; SOURCE LINE # 31
002A C2B5              CLR     GUNFIRE_HC595_RCLK
                                           ; SOURCE LINE # 32
002C 120000      R     LCALL   L?0029
                                           ; SOURCE LINE # 33
002F D2B5              SETB    GUNFIRE_HC595_RCLK
                                           ; SOURCE LINE # 34
0031 22                RET     
             ; FUNCTION _gunfire_hc595_wirte (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 38
                                           ; SOURCE LINE # 41
0000 E4                CLR     A
0001 F580              MOV     P0,A
0003         ?C0018:
                                           ; SOURCE LINE # 42
                                           ; SOURCE LINE # 43
                                           ; SOURCE LINE # 44
;---- Variable 'i' assigned to Register 'R1' ----
0003 E4                CLR     A
0004 F9                MOV     R1,A
0005         ?C0020:
0005 E9                MOV     A,R1
0006 C3                CLR     C
0007 9408              SUBB    A,#08H
0009 7480              MOV     A,#080H
000B 9480              SUBB    A,#080H
000D 50F4              JNC     ?C0018
                                           ; SOURCE LINE # 45
                                           ; SOURCE LINE # 47
000F E4                CLR     A
0010 FF                MOV     R7,A
0011 120000      R     LCALL   _gunfire_hc595_wirte
                                           ; SOURCE LINE # 49
0014 7400        R     MOV     A,#LOW hc595_buf
0016 29                ADD     A,R1
0017 F8                MOV     R0,A
0018 E6                MOV     A,@R0
0019 FF                MOV     R7,A
001A 120000      R     LCALL   _gunfire_hc595_wirte
                                           ; SOURCE LINE # 50
001D 7FF4              MOV     R7,#0F4H
001F 7E01              MOV     R6,#01H
0021 120000      R     LCALL   _delay_ms
                                           ; SOURCE LINE # 51
0024 09                INC     R1
0025 80DE              SJMP    ?C0020
             ; FUNCTION main (END)

C51 COMPILER V9.60.0.0   MAIN                                                              05/25/2022 17:41:21 PAGE 6   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
GUNFIRE_indpendentKey1 . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
GUNFIRE_indpendentKey2 . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
GUNFIRE_indpendentKey3 . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
GUNFIRE_indpendentKey4 . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
GUNFIRE_HC595_SRCLK. . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
T2 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
GUNFIRE_DT_SegSelection_A0 . . . . . .  ABSBIT   -----  BIT      00A2H  1
GUNFIRE_DT_SegSelection_A1 . . . . . .  ABSBIT   -----  BIT      00A3H  1
GUNFIRE_DT_SegSelection_A2 . . . . . .  ABSBIT   -----  BIT      00A4H  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
hc595_buf. . . . . . . . . . . . . . .  PUBLIC   DATA   ARRAY    0000H  8
GUNFIRE_beep . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A5H  1
gs8. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
gu8. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
EXF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
_sleep . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  timeout. . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
RCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
T2EX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
RCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0001H  1
C_T2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
RCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
TCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
GUNFIRE_HC595_RCLK . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
_delay_10us. . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0004H  -----
  ten_us . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
gs32 . . . . . . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
C51 COMPILER V9.60.0.0   MAIN                                                              05/25/2022 17:41:21 PAGE 7   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


gu32 . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
gs16 . . . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
gu16 . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
CP_RL2 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
TH2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
TL2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
_delay_ms. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  ms . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0004H  2
  j. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0002H  2
_gunfire_hc595_wirte . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  dat. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0003H  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
PT2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
EXEN2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
GUNFIRE_HC595_SER. . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    146    ----
C51 COMPILER V9.60.0.0   MAIN                                                              05/25/2022 17:41:21 PAGE 8   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
