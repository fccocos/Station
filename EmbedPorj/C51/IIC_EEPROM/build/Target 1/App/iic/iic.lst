C51 COMPILER V9.60.0.0   IIC                                                               05/30/2022 22:44:23 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN .\build\Target 1\App\iic\iic.o
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.exe .\APP\IIC\IIC.C PRINT(.\build\Target 1\App\iic\iic.lst) OMF2 TABS(4) COD
                    -E NOCOND SYMBOLS OPTIMIZE(8,SPEED) SMALL ROM(LARGE) INCDIR(D:/Keil_v5/C51/INC/Atmel;.\App\24c02;.\Public;.\App\iic;.\App
                    -\key;.\App\smg;D:\Keil_v5\C51\INC) DEFINE(__UVISION_VERSION=526) OBJECT(.\build\Target 1\App\iic\iic.o)

line level    source

   1          #include "iic.h"
   2          
   3          void iic_start(void)
   4          {
   5   1          IIC_SDA = 1;
   6   1          delay_10us(1);
   7   1          IIC_SCL = 1;
   8   1          delay_10us(1);
   9   1          IIC_SDA = 0;
  10   1          delay_10us(1);
  11   1          IIC_SCL = 0;
  12   1          delay_10us(1);
  13   1      }
  14          void iic_stop(void)
  15          {
  16   1          IIC_SDA = 0;
  17   1          delay_10us(1);
  18   1      
  19   1          IIC_SCL = 1;
  20   1          delay_10us(1);
  21   1      
  22   1          IIC_SDA = 1;
  23   1          delay_10us(1);
  24   1      }
  25          void iic_write_byte(u8 txd)
  26          {
  27   1          u8 i;
  28   1          IIC_SCL = 0;
  29   1          for (i = 0; i < 8; i++)
  30   1          {
  31   2              if (txd & 0x80)
  32   2                  IIC_SDA = 1;
  33   2              else
  34   2                  IIC_SDA = 0;
  35   2              txd <<= 1;
  36   2              delay_10us(1);
  37   2              IIC_SCL = 1;
  38   2              delay_10us(1);
  39   2              IIC_SCL = 0;
  40   2              delay_10us(1);
  41   2          }
  42   1      }
  43          u8 iic_read_byte(u8 ack)
  44          {
  45   1          u8 i, receive;
  46   1          for (i = 0; i < 8; i++)
  47   1          {
  48   2              IIC_SCL = 0;
  49   2              delay_10us(1);
  50   2              IIC_SCL = 1;
  51   2              receive <<= 1;
  52   2              if (IIC_SDA)
  53   2                  receive++;
C51 COMPILER V9.60.0.0   IIC                                                               05/30/2022 22:44:23 PAGE 2   

  54   2              delay_10us(1);
  55   2          }
  56   1          if (!ack)
  57   1              iic_nack();
  58   1          else
  59   1              iic_ack();
  60   1      
  61   1          return receive;
  62   1      }
  63          u8 iic_wait_ack(void)
  64          {
  65   1          u8 time_tmp = 0;
  66   1          IIC_SCL = 0;
  67   1          delay_10us(1);
  68   1          while (IIC_SDA)
  69   1          {
  70   2              time_tmp++;
  71   2              if (time_tmp > 100)
  72   2              {
  73   3                  iic_stop();
  74   3                  return 1;
  75   3              }
  76   2          }
  77   1          IIC_SCL = 0;
  78   1          return 0;
  79   1      }
  80          void iic_ack(void)
  81          {
  82   1          IIC_SCL = 0;
  83   1          IIC_SDA = 0;
  84   1          delay_10us(1);
  85   1          IIC_SCL = 1;
  86   1          delay_10us(1);
  87   1          IIC_SCL = 0;
  88   1      }
  89          void iic_nack(void)
  90          {
  91   1          IIC_SCL = 0;
  92   1          IIC_SDA = 1;
  93   1          delay_10us(1);
  94   1          IIC_SCL = 1;
  95   1          delay_10us(1);
  96   1          IIC_SCL = 0;
  97   1      }
C51 COMPILER V9.60.0.0   IIC                                                               05/30/2022 22:44:23 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION iic_start (BEGIN)
                                           ; SOURCE LINE # 3
                                           ; SOURCE LINE # 4
                                           ; SOURCE LINE # 5
0000 D2A0              SETB    IIC_SDA
                                           ; SOURCE LINE # 6
0002 7F01              MOV     R7,#01H
0004 7E00              MOV     R6,#00H
0006 120000      E     LCALL   _delay_10us
                                           ; SOURCE LINE # 7
0009 D2A1              SETB    IIC_SCL
                                           ; SOURCE LINE # 8
000B 7F01              MOV     R7,#01H
000D 7E00              MOV     R6,#00H
000F 120000      E     LCALL   _delay_10us
                                           ; SOURCE LINE # 9
0012 C2A0              CLR     IIC_SDA
                                           ; SOURCE LINE # 10
0014 7F01              MOV     R7,#01H
0016 7E00              MOV     R6,#00H
0018 120000      E     LCALL   _delay_10us
                                           ; SOURCE LINE # 11
001B C2A1              CLR     IIC_SCL
                                           ; SOURCE LINE # 12
001D 7F01              MOV     R7,#01H
001F 7E00              MOV     R6,#00H
0021 020000      E     LJMP    _delay_10us
             ; FUNCTION iic_start (END)

             ; FUNCTION iic_stop (BEGIN)
                                           ; SOURCE LINE # 14
                                           ; SOURCE LINE # 15
                                           ; SOURCE LINE # 16
0000 C2A0              CLR     IIC_SDA
                                           ; SOURCE LINE # 17
0002 7F01              MOV     R7,#01H
0004 7E00              MOV     R6,#00H
0006 120000      E     LCALL   _delay_10us
                                           ; SOURCE LINE # 19
0009 D2A1              SETB    IIC_SCL
                                           ; SOURCE LINE # 20
000B 7F01              MOV     R7,#01H
000D 7E00              MOV     R6,#00H
000F 120000      E     LCALL   _delay_10us
                                           ; SOURCE LINE # 22
0012 D2A0              SETB    IIC_SDA
                                           ; SOURCE LINE # 23
0014 7F01              MOV     R7,#01H
0016 7E00              MOV     R6,#00H
0018 020000      E     LJMP    _delay_10us
             ; FUNCTION iic_stop (END)

             ; FUNCTION _iic_write_byte (BEGIN)
                                           ; SOURCE LINE # 25
0000 8F00        R     MOV     txd,R7
                                           ; SOURCE LINE # 26
                                           ; SOURCE LINE # 28
0002 C2A1              CLR     IIC_SCL
                                           ; SOURCE LINE # 29
C51 COMPILER V9.60.0.0   IIC                                                               05/30/2022 22:44:23 PAGE 4   

0004 E4                CLR     A
0005 F500        R     MOV     i,A
0007         ?C0003:
0007 C3                CLR     C
0008 E500        R     MOV     A,i
000A 9408              SUBB    A,#08H
000C 7480              MOV     A,#080H
000E 9480              SUBB    A,#080H
0010 502E              JNC     ?C0008
                                           ; SOURCE LINE # 30
                                           ; SOURCE LINE # 31
0012 E500        R     MOV     A,txd
0014 30E704            JNB     ACC.7,?C0006
                                           ; SOURCE LINE # 32
0017 D2A0              SETB    IIC_SDA
0019 8002              SJMP    ?C0007
001B         ?C0006:
                                           ; SOURCE LINE # 34
001B C2A0              CLR     IIC_SDA
001D         ?C0007:
                                           ; SOURCE LINE # 35
001D E500        R     MOV     A,txd
001F 25E0              ADD     A,ACC
0021 F500        R     MOV     txd,A
                                           ; SOURCE LINE # 36
0023 7F01              MOV     R7,#01H
0025 7E00              MOV     R6,#00H
0027 120000      E     LCALL   _delay_10us
                                           ; SOURCE LINE # 37
002A D2A1              SETB    IIC_SCL
                                           ; SOURCE LINE # 38
002C 7F01              MOV     R7,#01H
002E 7E00              MOV     R6,#00H
0030 120000      E     LCALL   _delay_10us
                                           ; SOURCE LINE # 39
0033 C2A1              CLR     IIC_SCL
                                           ; SOURCE LINE # 40
0035 7F01              MOV     R7,#01H
0037 7E00              MOV     R6,#00H
0039 120000      E     LCALL   _delay_10us
                                           ; SOURCE LINE # 41
003C 0500        R     INC     i
003E 80C7              SJMP    ?C0003
                                           ; SOURCE LINE # 42
0040         ?C0008:
0040 22                RET     
             ; FUNCTION _iic_write_byte (END)

             ; FUNCTION _iic_read_byte (BEGIN)
                                           ; SOURCE LINE # 43
0000 8F00        R     MOV     ack,R7
                                           ; SOURCE LINE # 44
                                           ; SOURCE LINE # 46
0002 E4                CLR     A
0003 F500        R     MOV     i,A
0005         ?C0009:
0005 C3                CLR     C
0006 E500        R     MOV     A,i
0008 9408              SUBB    A,#08H
000A 7480              MOV     A,#080H
000C 9480              SUBB    A,#080H
000E 5021              JNC     ?C0010
C51 COMPILER V9.60.0.0   IIC                                                               05/30/2022 22:44:23 PAGE 5   

                                           ; SOURCE LINE # 47
                                           ; SOURCE LINE # 48
0010 C2A1              CLR     IIC_SCL
                                           ; SOURCE LINE # 49
0012 7F01              MOV     R7,#01H
0014 7E00              MOV     R6,#00H
0016 120000      E     LCALL   _delay_10us
                                           ; SOURCE LINE # 50
0019 D2A1              SETB    IIC_SCL
                                           ; SOURCE LINE # 51
001B E500        R     MOV     A,receive
001D 25E0              ADD     A,ACC
001F F500        R     MOV     receive,A
                                           ; SOURCE LINE # 52
0021 30A002            JNB     IIC_SDA,?C0012
                                           ; SOURCE LINE # 53
0024 0500        R     INC     receive
0026         ?C0012:
                                           ; SOURCE LINE # 54
0026 7F01              MOV     R7,#01H
0028 7E00              MOV     R6,#00H
002A 120000      E     LCALL   _delay_10us
                                           ; SOURCE LINE # 55
002D 0500        R     INC     i
002F 80D4              SJMP    ?C0009
0031         ?C0010:
                                           ; SOURCE LINE # 56
0031 E500        R     MOV     A,ack
0033 7005              JNZ     ?C0013
                                           ; SOURCE LINE # 57
0035 120000      R     LCALL   iic_nack
0038 8003              SJMP    ?C0014
003A         ?C0013:
                                           ; SOURCE LINE # 59
003A 120000      R     LCALL   iic_ack
003D         ?C0014:
                                           ; SOURCE LINE # 61
003D AF00        R     MOV     R7,receive
                                           ; SOURCE LINE # 62
003F 22                RET     
             ; FUNCTION _iic_read_byte (END)

             ; FUNCTION iic_wait_ack (BEGIN)
                                           ; SOURCE LINE # 63
                                           ; SOURCE LINE # 64
                                           ; SOURCE LINE # 65
0000 E4                CLR     A
0001 F500        R     MOV     time_tmp,A
                                           ; SOURCE LINE # 66
0003 C2A1              CLR     IIC_SCL
                                           ; SOURCE LINE # 67
0005 7F01              MOV     R7,#01H
0007 FE                MOV     R6,A
0008 120000      E     LCALL   _delay_10us
000B         ?C0016:
                                           ; SOURCE LINE # 68
000B 30A013            JNB     IIC_SDA,?C0017
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 70
000E 0500        R     INC     time_tmp
                                           ; SOURCE LINE # 71
0010 D3                SETB    C
C51 COMPILER V9.60.0.0   IIC                                                               05/30/2022 22:44:23 PAGE 6   

0011 E500        R     MOV     A,time_tmp
0013 9464              SUBB    A,#064H
0015 7480              MOV     A,#080H
0017 9480              SUBB    A,#080H
0019 40F0              JC      ?C0016
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 73
001B 120000      R     LCALL   iic_stop
                                           ; SOURCE LINE # 74
001E 7F01              MOV     R7,#01H
0020 22                RET     
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 76
0021         ?C0017:
                                           ; SOURCE LINE # 77
0021 C2A1              CLR     IIC_SCL
                                           ; SOURCE LINE # 78
0023 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 79
0025         ?C0019:
0025 22                RET     
             ; FUNCTION iic_wait_ack (END)

             ; FUNCTION iic_ack (BEGIN)
                                           ; SOURCE LINE # 80
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 82
0000 C2A1              CLR     IIC_SCL
                                           ; SOURCE LINE # 83
0002 C2A0              CLR     IIC_SDA
                                           ; SOURCE LINE # 84
0004 7F01              MOV     R7,#01H
0006 7E00              MOV     R6,#00H
0008 120000      E     LCALL   _delay_10us
                                           ; SOURCE LINE # 85
000B D2A1              SETB    IIC_SCL
                                           ; SOURCE LINE # 86
000D 7F01              MOV     R7,#01H
000F 7E00              MOV     R6,#00H
0011 120000      E     LCALL   _delay_10us
                                           ; SOURCE LINE # 87
0014 C2A1              CLR     IIC_SCL
                                           ; SOURCE LINE # 88
0016 22                RET     
             ; FUNCTION iic_ack (END)

             ; FUNCTION iic_nack (BEGIN)
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
0000 C2A1              CLR     IIC_SCL
                                           ; SOURCE LINE # 92
0002 D2A0              SETB    IIC_SDA
                                           ; SOURCE LINE # 93
0004 7F01              MOV     R7,#01H
0006 7E00              MOV     R6,#00H
0008 120000      E     LCALL   _delay_10us
                                           ; SOURCE LINE # 94
000B D2A1              SETB    IIC_SCL
                                           ; SOURCE LINE # 95
000D 7F01              MOV     R7,#01H
000F 7E00              MOV     R6,#00H
C51 COMPILER V9.60.0.0   IIC                                                               05/30/2022 22:44:23 PAGE 7   

0011 120000      E     LCALL   _delay_10us
                                           ; SOURCE LINE # 96
0014 C2A1              CLR     IIC_SCL
                                           ; SOURCE LINE # 97
0016 22                RET     
             ; FUNCTION iic_nack (END)

C51 COMPILER V9.60.0.0   IIC                                                               05/30/2022 22:44:23 PAGE 8   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
T2 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
IIC_SDA. . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A0H  1
EXF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IIC_SCL. . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A1H  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
RCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
T2EX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
RCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
C_T2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
u8 . . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
RCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
TCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
iic_nack . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
_delay_10us. . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
CP_RL2 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
iic_ack. . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
iic_start. . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
_iic_read_byte . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  ack. . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  i. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0001H  1
  receive. . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0002H  1
TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
C51 COMPILER V9.60.0.0   IIC                                                               05/30/2022 22:44:23 PAGE 9   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
TH2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
TL2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
PT2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
_iic_write_byte. . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  txd. . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
  i. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0001H  1
u16. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
iic_wait_ack . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  time_tmp . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0000H  1
iic_stop . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
EXEN2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    276    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
