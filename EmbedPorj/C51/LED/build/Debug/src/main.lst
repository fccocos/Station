C51 COMPILER V9.60.0.0   MAIN                                                              05/23/2022 18:30:23 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\build\Debug\src\main.o
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.exe .\SRC\MAIN.C PRINT(.\build\Debug\src\main.lst) OMF2 TABS(4) CODE NOCOND 
                    -SYMBOLS OPTIMIZE(8,SPEED) SMALL ROM(LARGE) INCDIR(d:/Keil_v5/C51/INC;D:\Keil_v5\C51\INC;.\src) DEFINE(__UVISION_VERSION=
                    -526) OBJECT(.\build\Debug\src\main.o)

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>
   3          #define LED_PORT P2
   4          
   5          typedef unsigned int u16;
   6          typedef unsigned char u8;
   7          
   8          void sleep(u16 timecout)
   9          {
  10   1          while (timecout--)
  11   1              ;
  12   1      }
  13          
  14          void shitf_8_right()
  15          {
  16   1          int i;
  17   1          for (i = 0; i < 8; i++)
  18   1          {
  19   2              LED_PORT = ~(0x01 >> i);
  20   2              sleep(500000);
  21   2          }
  22   1      }
  23          
  24          // void test01()
  25          // {
  26          //     LED_PORT = ~LED_PORT;
  27          //     sleep(500000);
  28          //     LED_PORT = ~LED_PORT;
  29          //     sleep(500000);
  30          // }
  31          
  32          void test02()
  33          {
  34   1          while (1)
  35   1          {
  36   2              int i;
  37   2              for (i = 0; i < 8; i++)
  38   2              {
  39   3                  LED_PORT = ~(0x01 << i);
  40   3                  sleep(100000);
  41   3              }
  42   2              // 0111 1111 ~ 1000 0000  >>1 0100 0000 ~ 1011 1111 (~ >>1)
  43   2      
  44   2              for (i = 1; i < 8; i++)
  45   2              {
  46   3                  LED_PORT = ~LED_PORT;
  47   3                  LED_PORT = ~(LED_PORT >> 1);
  48   3                  sleep(100000);
  49   3              }
  50   2          }
  51   1      }
  52          
  53          int main(void)
C51 COMPILER V9.60.0.0   MAIN                                                              05/23/2022 18:30:23 PAGE 2   

  54          {
  55   1          int i;
  56   1          LED_PORT = ~0x01; //
  57   1          sleep(100000);
  58   1          while (1)
  59   1          {
  60   2              for (i = 0; i < 7; i++)
  61   2              {
  62   3                  LED_PORT = _crol_(LED_PORT, 1);
  63   3                  sleep(100000);
  64   3              }
  65   2              // 0111 1111 ~ 1000 0000  >>1 0100 0000 ~ 1011 1111 (~ >>1)
  66   2      
  67   2              for (i = 0; i < 7; i++)
  68   2              {
  69   3                  LED_PORT = _cror_(LED_PORT, 1);
  70   3                  sleep(100000);
  71   3              }
  72   2          }
  73   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              05/23/2022 18:30:23 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION L?0040 (BEGIN)
0000 F4                CPL     A
0001         L?0041:
0001 F5A0              MOV     P2,A
0003         L?0042:
0003 7FA0              MOV     R7,#0A0H
0005 7E86              MOV     R6,#086H
             ; FUNCTION _sleep (BEGIN)
                                           ; SOURCE LINE # 8
;---- Variable 'timecout' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 9
0007         ?C0001:
                                           ; SOURCE LINE # 10
0007 EF                MOV     A,R7
0008 1F                DEC     R7
0009 AC06              MOV     R4,AR6
000B 7001              JNZ     ?C0026
000D 1E                DEC     R6
000E         ?C0026:
000E 4C                ORL     A,R4
000F 70F6              JNZ     ?C0001
                                           ; SOURCE LINE # 12
0011 22                RET     
             ; FUNCTION _sleep (END)

             ; FUNCTION shitf_8_right (BEGIN)
                                           ; SOURCE LINE # 14
                                           ; SOURCE LINE # 15
                                           ; SOURCE LINE # 17
;---- Variable 'i' assigned to Register 'R2/R3' ----
0000 E4                CLR     A
0001 FB                MOV     R3,A
0002 FA                MOV     R2,A
0003         ?C0004:
                                           ; SOURCE LINE # 18
                                           ; SOURCE LINE # 19
0003 AF03              MOV     R7,AR3
0005 A807              MOV     R0,AR7
0007 7401              MOV     A,#01H
0009 08                INC     R0
000A 8002              SJMP    ?C0028
000C         ?C0027:
000C C3                CLR     C
000D 13                RRC     A
000E         ?C0028:
000E D8FC              DJNZ    R0,?C0027
0010 F4                CPL     A
0011 F5A0              MOV     P2,A
                                           ; SOURCE LINE # 20
0013 7F20              MOV     R7,#020H
0015 7EA1              MOV     R6,#0A1H
0017 120000      R     LCALL   _sleep
                                           ; SOURCE LINE # 21
001A 0B                INC     R3
001B BB0001            CJNE    R3,#00H,?C0029
001E 0A                INC     R2
001F         ?C0029:
001F EB                MOV     A,R3
0020 6408              XRL     A,#08H
C51 COMPILER V9.60.0.0   MAIN                                                              05/23/2022 18:30:23 PAGE 4   

0022 4A                ORL     A,R2
0023 70DE              JNZ     ?C0004
                                           ; SOURCE LINE # 22
0025         ?C0007:
0025 22                RET     
             ; FUNCTION shitf_8_right (END)

             ; FUNCTION test02 (BEGIN)
                                           ; SOURCE LINE # 32
                                           ; SOURCE LINE # 33
0000         ?C0008:
                                           ; SOURCE LINE # 34
                                           ; SOURCE LINE # 35
                                           ; SOURCE LINE # 37
0000 E4                CLR     A
0001 F500        R     MOV     i,A
0003 F500        R     MOV     i+01H,A
0005         ?C0010:
                                           ; SOURCE LINE # 38
                                           ; SOURCE LINE # 39
0005 AF00        R     MOV     R7,i+01H
0007 A807              MOV     R0,AR7
0009 7401              MOV     A,#01H
000B 08                INC     R0
000C 8002              SJMP    ?C0031
000E         ?C0030:
000E C3                CLR     C
000F 33                RLC     A
0010         ?C0031:
0010 D8FC              DJNZ    R0,?C0030
                                           ; SOURCE LINE # 40
0012 120000      R     LCALL   L?0040
                                           ; SOURCE LINE # 41
0015 0500        R     INC     i+01H
0017 E500        R     MOV     A,i+01H
0019 7002              JNZ     ?C0032
001B 0500        R     INC     i
001D         ?C0032:
001D C3                CLR     C
001E 9408              SUBB    A,#08H
0020 E500        R     MOV     A,i
0022 6480              XRL     A,#080H
0024 9480              SUBB    A,#080H
0026 40DD              JC      ?C0010
0028         ?C0011:
                                           ; SOURCE LINE # 44
0028 750000      R     MOV     i,#00H
002B 750001      R     MOV     i+01H,#01H
002E         ?C0013:
002E C3                CLR     C
002F E500        R     MOV     A,i+01H
0031 9408              SUBB    A,#08H
0033 E500        R     MOV     A,i
0035 6480              XRL     A,#080H
0037 9480              SUBB    A,#080H
0039 50C5              JNC     ?C0008
                                           ; SOURCE LINE # 45
                                           ; SOURCE LINE # 46
003B 63A0FF            XRL     P2,#0FFH
                                           ; SOURCE LINE # 47
003E E5A0              MOV     A,P2
0040 C3                CLR     C
C51 COMPILER V9.60.0.0   MAIN                                                              05/23/2022 18:30:23 PAGE 5   

0041 13                RRC     A
                                           ; SOURCE LINE # 48
0042 120000      R     LCALL   L?0040
                                           ; SOURCE LINE # 49
0045 0500        R     INC     i+01H
0047 E500        R     MOV     A,i+01H
0049 70E3              JNZ     ?C0013
004B 0500        R     INC     i
004D         ?C0033:
004D 80DF              SJMP    ?C0013
             ; FUNCTION test02 (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 54
                                           ; SOURCE LINE # 56
0000 75A0FE            MOV     P2,#0FEH
                                           ; SOURCE LINE # 57
0003 120000      R     LCALL   L?0042
0006         ?C0017:
                                           ; SOURCE LINE # 58
                                           ; SOURCE LINE # 59
                                           ; SOURCE LINE # 60
;---- Variable 'i' assigned to Register 'R2/R3' ----
0006 E4                CLR     A
0007 FB                MOV     R3,A
0008 FA                MOV     R2,A
0009         ?C0019:
                                           ; SOURCE LINE # 61
                                           ; SOURCE LINE # 62
0009 AFA0              MOV     R7,P2
000B 7801              MOV     R0,#01H
000D EF                MOV     A,R7
000E 08                INC     R0
000F 8001              SJMP    ?C0035
0011         ?C0034:
0011 23                RL      A
0012         ?C0035:
0012 D8FD              DJNZ    R0,?C0034
                                           ; SOURCE LINE # 63
0014 120000      R     LCALL   L?0041
                                           ; SOURCE LINE # 64
0017 0B                INC     R3
0018 BB0001            CJNE    R3,#00H,?C0036
001B 0A                INC     R2
001C         ?C0036:
001C EB                MOV     A,R3
001D 6407              XRL     A,#07H
001F 4A                ORL     A,R2
0020 70E7              JNZ     ?C0019
0022         ?C0020:
                                           ; SOURCE LINE # 67
0022 E4                CLR     A
0023 FA                MOV     R2,A
0024 FB                MOV     R3,A
0025         ?C0022:
0025 C3                CLR     C
0026 EB                MOV     A,R3
0027 9407              SUBB    A,#07H
0029 EA                MOV     A,R2
002A 6480              XRL     A,#080H
002C 9480              SUBB    A,#080H
C51 COMPILER V9.60.0.0   MAIN                                                              05/23/2022 18:30:23 PAGE 6   

002E 50D6              JNC     ?C0017
                                           ; SOURCE LINE # 68
                                           ; SOURCE LINE # 69
0030 AFA0              MOV     R7,P2
0032 7801              MOV     R0,#01H
0034 EF                MOV     A,R7
0035 08                INC     R0
0036 8001              SJMP    ?C0038
0038         ?C0037:
0038 03                RR      A
0039         ?C0038:
0039 D8FD              DJNZ    R0,?C0037
                                           ; SOURCE LINE # 70
003B 120000      R     LCALL   L?0041
                                           ; SOURCE LINE # 71
003E 0B                INC     R3
003F BB0001            CJNE    R3,#00H,?C0039
0042 0A                INC     R2
0043         ?C0039:
0043 80E0              SJMP    ?C0022
             ; FUNCTION main (END)

C51 COMPILER V9.60.0.0   MAIN                                                              05/23/2022 18:30:23 PAGE 7   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
P3 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
T0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
AC . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
T1 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
T2 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
EXF2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
RD . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
ES . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
RI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
_sleep . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0007H  -----
  timecout . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
INT0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B2H  1
CY . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
TI . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
INT1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
RCAP2H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
PS . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
T2EX . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
test02 . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  AUTO     DATA   INT      0000H  2
OV . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
RCAP2L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   INT      0002H  2
C_T2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
WR . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
u8 . . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
RCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
TCLK . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
SBUF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
SCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
shitf_8_right. . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   INT      0002H  2
IE0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
IE1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
CP_RL2 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
ET0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
ET1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
TF0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
ET2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
TF1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
TF2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
RB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
EX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
C51 COMPILER V9.60.0.0   MAIN                                                              05/23/2022 18:30:23 PAGE 8   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


IT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
TB8. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
EX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
IT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
TH2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
P. . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
SM0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
SM1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009EH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
SM2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
TL2. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
PT0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
PT1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
RS0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
PT2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
TR0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
RS1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TR1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
TR2. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
PX0. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
PX1. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
u16. . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
EXEN2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
REN. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
T2CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
RXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
TXD. . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
F0 . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    204    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
